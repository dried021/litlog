<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bookfox.repository.ActivityMapper">
    <select id="getFollowingActivityFeed" resultType="com.bookfox.model.ActivityDto" parameterType="map">
        SELECT
            fl.follow_user_id AS followUserId,
            u.nickname AS followUsername,
            u.profile_image AS profileImage,
            b.book_api_id AS bookApiId,
            b.title AS bookTitle,
            NULL AS collectionId,
            NULL AS collectionTitle,
            NULL AS reviewId,
            NULL as rating,
            bs.creation_date AS creationDate,
            "to_read" AS activityType
        FROM follow_list fl
            JOIN user u ON u.id = fl.follow_user_id
            JOIN book_shelf bs ON bs.user_id = fl.follow_user_id
            JOIN book b ON b.id = bs.book_id
        WHERE fl.user_id = #{userId}
            AND bs.shelf_type = 1
            AND bs.creation_date &gt;= DATE_SUB(CURDATE(), INTERVAL 30 DAY)
        UNION ALL
        SELECT
            fl.follow_user_id AS followUserId,
            u.nickname AS followUsername,
            u.profile_image AS profileImage,
            b.book_api_id AS bookApiId,
            b.title AS bookTitle,
            NULL AS collectionId,
            NULL AS collectionTitle,
            NULL AS reviewId,
            NULL as rating,
            bs.creation_date AS creationDate,
            "reading" AS activityType
        FROM follow_list fl
            JOIN user u ON u.id = fl.follow_user_id
            JOIN book_shelf bs ON bs.user_id = fl.follow_user_id
            JOIN book b ON b.id = bs.book_id
        WHERE fl.user_id = #{userId}
            AND bs.shelf_type = 2
            AND bs.creation_date &gt;= DATE_SUB(CURDATE(), INTERVAL 30 DAY)
        UNION ALL
        SELECT
            fl.follow_user_id AS followUserId,
            u.nickname AS followUsername,
            u.profile_image AS profileImage,
            b.book_api_id AS bookApiId,
            b.title AS bookTitle,
            NULL AS collectionId,
            NULL AS collectionTitle,
            NULL AS reviewId,
            NULL as rating,
            bs.creation_date AS creationDate,
            "read" AS activityType
        FROM follow_list fl
            JOIN user u ON u.id = fl.follow_user_id
            JOIN book_shelf bs ON bs.user_id = fl.follow_user_id
            JOIN book b ON b.id = bs.book_id
        WHERE fl.user_id = #{userId}
            AND bs.shelf_type = 3
            AND bs.creation_date &gt;= DATE_SUB(CURDATE(), INTERVAL 30 DAY)
        UNION ALL
        SELECT
            fl.follow_user_id AS followUserId,
            u.nickname AS followUsername,
            u.profile_image AS profileImage,
            b.book_api_id AS bookApiId,
            b.title AS bookTitle,
            NULL AS collectionId,
            NULL AS collectionTitle,
            br.id AS reviewId,
            br.rating,
            br.creation_date AS creationDate,
            "review" AS activityType
        FROM follow_list fl
            JOIN user u ON u.id = fl.follow_user_id
            JOIN book_review br ON br.user_id = fl.follow_user_id
            JOIN book b ON b.id = br.book_id
        WHERE fl.user_id = #{userId}
            AND br.creation_date &gt;= DATE_SUB(CURDATE(), INTERVAL 30 DAY)
        UNION ALL
        SELECT
            fl.follow_user_id AS followUserId,
            u.nickname AS followUsername,
            u.profile_image AS profileImage,
            b.book_api_id AS bookApiId,
            b.title AS bookTitle,
            NULL AS collectionId,
            NULL AS collectionTitle,
            NULL AS reviewId,
            NULL AS rating,
            ll.creation_date AS creationDate,
            "liked_book" AS activityType
        FROM follow_list fl
            JOIN user u ON u.id = fl.follow_user_id
            JOIN like_list ll ON ll.user_id = fl.follow_user_id
            JOIN book b ON b.id = ll.target_id
        WHERE fl.user_id = #{userId}
            AND ll.like_type = 2
            AND ll.creation_date &gt;= DATE_SUB(CURDATE(), INTERVAL 30 DAY)
        ORDER BY creationDate DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="getIncomingActivityFeed" resultType="com.bookfox.model.ActivityDto" parameterType="map">
        SELECT
            fl.user_id AS followUserId,
            u.nickname AS followUsername,
            u.profile_image AS profileImage,
            NULL AS bookApiId,
            NULL AS bookTitle,
            NULL AS collectionId,
            NULL AS collectionTitle,
            NULL AS reviewId,
            NULL AS rating,
            fl.creation_date AS creationDate,
            "recent_followers" AS activityType
        FROM follow_list fl
            JOIN user u ON u.id = fl.user_id
        WHERE fl.follow_user_id = #{userId}
            AND fl.creation_date &gt;= DATE_SUB(CURDATE(), INTERVAL 30 DAY)
        UNION ALL
        SELECT
            u.id AS followUserId,
            u.nickname AS followUsername,
            u.profile_image AS profileImage,
            b.book_api_id AS bookApiId,
            b.title AS bookTitle,
            NULL AS collectionId,
            NULL AS collectionTitle,
            br.id AS reviewId,
            br.rating AS rating,
            ll.creation_date AS creationDate,
            "review_liked" AS activityType
        FROM book_review br
            JOIN book b ON b.id = br.book_id
            JOIN like_list ll ON ll.target_id = br.id
            JOIN user u ON u.id = ll.user_id
        WHERE br.user_id = #{userId}
            AND ll.like_type = 1
            AND u.id != #{userId}
            AND ll.creation_date &gt;= DATE_SUB(CURDATE(), INTERVAL 30 DAY)
        UNION ALL
        SELECT
            u.id AS followUserId,
            u.nickname AS followUsername,
            u.profile_image AS profileImage,
            NULL AS bookApiId,
            NULL AS bookTitle,
            bc.id AS collectionId,
            bc.title AS collectionTitle,
            NULL AS reviewId,
            NULL AS rating,
            ll.creation_date AS creationDate,
            "collection_liked" AS activityType
        FROM book_collection bc
            JOIN like_list ll ON ll.target_id = bc.id
            JOIN user u ON u.id = ll.user_id
        WHERE bc.user_id = #{userId}
            AND ll.like_type = 3
            AND u.id != #{userId}
            AND ll.creation_date &gt;= DATE_SUB(CURDATE(), INTERVAL 30 DAY)
        ORDER BY creationDate DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>
</mapper>